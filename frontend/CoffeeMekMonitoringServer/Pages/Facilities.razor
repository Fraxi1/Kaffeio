@page "/facilities"
@using CoffeeMekMonitoringServer.Models
@using CoffeeMekMonitoringServer.Services.Interfaces
@inject IFacilityService FacilityService
@inject IMachineService MachineService

<PageTitle>Stabilimenti - Kaffeio</PageTitle>

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col">
            <div class="d-flex align-items-center justify-content-between">
                <div>
                    <h2 class="mb-1">
                        <i class="fas fa-building text-primary me-3"></i>
                        Stabilimenti di Produzione
                    </h2>
                    <p class="text-muted mb-0">Gestione e monitoraggio degli stabilimenti industriali</p>
                </div>
                <div class="d-flex gap-2">
                    <a href="/" class="btn btn-outline-primary">
                        <i class="fas fa-home me-2"></i>
                        Dashboard
                    </a>
                    <button class="btn btn-outline-secondary" @onclick="LoadFacilities">
                        <i class="fas fa-sync-alt me-2"></i>
                        Aggiorna
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Breadcrumb di Navigazione -->
    <div class="row mb-3">
        <div class="col">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="/" class="text-decoration-none">
                            <i class="fas fa-home me-1"></i>
                            Dashboard
                        </a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">
                        <i class="fas fa-building me-1"></i>
                        Stabilimenti
                    </li>
                </ol>
            </nav>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="row">
            <div class="col-12">
                <div class="card border-0 shadow-sm">
                    <div class="card-body text-center py-5">
                        <div class="spinner-border text-primary mb-3" role="status">
                            <span class="visually-hidden">Caricamento...</span>
                        </div>
                        <h5 class="text-muted">Caricamento stabilimenti in corso...</h5>
                        <p class="text-muted mb-0">Connessione all'API Kaffeio</p>
                    </div>
                </div>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="row">
            <div class="col-12">
                <div class="alert alert-danger border-0 shadow-sm" role="alert">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-exclamation-triangle fa-2x me-3"></i>
                        <div class="flex-grow-1">
                            <h5 class="alert-heading mb-1">Errore nel caricamento</h5>
                            <p class="mb-2">@errorMessage</p>
                            <div class="d-flex gap-2">
                                <button class="btn btn-outline-danger btn-sm" @onclick="LoadFacilities">
                                    <i class="fas fa-redo me-2"></i>
                                    Riprova
                                </button>
                                <a href="/" class="btn btn-outline-secondary btn-sm">
                                    <i class="fas fa-home me-2"></i>
                                    Torna alla Dashboard
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else if (facilities.Any())
    {
        <div class="row">
            @foreach (var facility in facilities)
            {
                <div class="col-lg-6 col-xl-4 mb-4">
                    <div class="card border-0 shadow-sm h-100 hover-shadow">
                        <div class="card-header bg-light border-0">
                            <div class="d-flex align-items-center justify-content-between">
                                <h6 class="mb-0 fw-bold">
                                    <i class="fas fa-building me-2"></i>
                                    @facility.Name
                                </h6>
                                <span class="badge bg-success">
                                    <i class="fas fa-check-circle me-1"></i>
                                    ATTIVO
                                </span>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row mb-3">
                                <div class="col-8">
                                    <small class="text-muted d-block mb-1">
                                        <i class="@facility.LocationIcon me-2"></i>
                                        Posizione:
                                    </small>
                                    <span class="fw-bold">@facility.Location</span>
                                </div>
                                <div class="col-4">
                                    <small class="text-muted d-block mb-1">
                                        <i class="fas fa-clock me-2"></i>
                                        Fuso:
                                    </small>
                                    <span class="fw-bold">UTC@facility.TimeZone</span>
                                </div>
                            </div>

                            <div class="border-top pt-3">
                                <div class="d-flex align-items-center justify-content-between mb-2">
                                    <small class="text-muted">
                                        <i class="fas fa-cog me-2"></i>
                                        Macchine Associate:
                                    </small>
                                    <button class="btn btn-outline-info btn-sm" @onclick="() => LoadMachinesForFacility(facility.Id)">
                                        <i class="fas fa-search me-1"></i>
                                        Visualizza
                                    </button>
                                </div>

                                @if (facilityMachines.ContainsKey(facility.Id))
                                {
                                    var machines = facilityMachines[facility.Id];
                                    if (machines.Any())
                                    {
                                        <div class="mt-2">
                                            @foreach (var machine in machines.Take(3))
                                            {
                                                <div class="d-flex align-items-center justify-content-between py-1">
                                                    <small class="text-muted">@machine.Name</small>
                                                    <span class="badge bg-@machine.StatusBadge badge-sm">
                                                        @machine.Status
                                                    </span>
                                                </div>
                                            }
                                            @if (machines.Count > 3)
                                            {
                                                <small class="text-muted">
                                                    ... e altre @(machines.Count - 3) macchine
                                                </small>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <small class="text-muted">Nessuna macchina associata</small>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-12">
                <div class="card border-0 shadow-sm">
                    <div class="card-body text-center py-5">
                        <div class="mb-4">
                            <i class="fas fa-building fa-4x text-muted"></i>
                        </div>
                        <h4 class="text-muted mb-3">Nessuno stabilimento trovato</h4>
                        <p class="text-muted mb-4">
                            Non ci sono stabilimenti registrati nel sistema.
                        </p>
                        <div class="d-flex justify-content-center gap-2">
                            <button class="btn btn-primary" @onclick="LoadFacilities">
                                <i class="fas fa-sync-alt me-2"></i>
                                Ricarica lista
                            </button>
                            <a href="/" class="btn btn-outline-secondary">
                                <i class="fas fa-home me-2"></i>
                                Torna alla Dashboard
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<Facility> facilities = new();
    private Dictionary<int, List<Machine>> facilityMachines = new();
    private bool isLoading = true;
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadFacilities();
    }

    private async Task LoadFacilities()
    {
        isLoading = true;
        errorMessage = string.Empty;
        StateHasChanged();

        try
        {
            var result = await FacilityService.GetAllFacilitiesAsync();
            
            if (result.IsSuccess && result.Data != null)
            {
                facilities = result.Data;
            }
            else
            {
                errorMessage = result.ErrorMessage ?? "Errore nel caricamento degli stabilimenti";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Errore imprevisto: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task LoadMachinesForFacility(int facilityId)
    {
        try
        {
            var result = await MachineService.GetMachinesByFacilityAsync(facilityId);
            
            if (result.IsSuccess && result.Data != null)
            {
                facilityMachines[facilityId] = result.Data;
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            // Log error silently, don't show to user in this context
        }
    }
}
